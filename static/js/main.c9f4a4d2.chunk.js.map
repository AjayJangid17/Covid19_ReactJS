{"version":3,"sources":["components/CountryPicker/CountryPicker.module.css","images/image.png","images/covid-19.gif","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Tables/Tables.jsx","App.js","index.js","components/Tables/Tables.module.css","App.module.css","components/Chart/Charts.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","lable","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Tables","props","handleViewOpen","setState","viewopen","handleHideData","myResult","hideData","handleViewClose","getData","fetch","then","respone","json","result","regional","summary","state","this","headerTextColor","fontSize","buttonStyle","Button","onClick","style","width","Dialog","minWidth","open","DialogContent","TableContainer","tablecontainer","Table","TableHead","TableRow","TableCell","TableBody","fontWeight","loc","confirmedCasesIndian","discharged","totalConfirmed","DialogActions","Component","App","table","fetchedData","image","src","coronoImage","alt","gif","coronagif","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9f4a4d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.3b7d3730.png\";","module.exports = __webpack_public_path__ + \"static/media/covid-19.6001db85.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"image\":\"Cards_image__10J_3\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nimport styles from \"./Cards.module.css\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading..\";\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of recoveries cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of deaths caused by COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\n\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if(country){\n        changeableUrl = `${url}/countries/${country}`\n    }\n    try {\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\n\n        return {confirmed, recovered, deaths, lastUpdate};\n    } catch(error) {\n        console.log(error);\n        \n\n    }\n}\n\n\nexport const fetchDailyData = async () => {\n    try {\n\n        const { data } = await axios.get(`${url}/daily`);\n        \n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n\n    return modifiedData;\n    }catch(error) {\n\n    }\n}\n\n\nexport const fetchCountries = async () => {\n    try {\n        const {data : { countries }} = await axios.get(`${url}/countries`);\n        \n        return countries.map((country) => country.name)\n    }catch(error) {\n\n    }\n    \n}\n// export const fetchState = async () => {\n//     try {\n//         const {table : { state }} = await axios.get('http://covid19-india-adhikansh.herokuapp.com/states');\n\n//         return state.map((apidata) => apidata)\n//     }catch(error) {\n\n//     }\n    \n// }\n\n\n\n\n\n \n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport styles from \"./Charts.module.css\";\n\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    //console.log(dailyData);\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            lable: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport styles from \"./CountryPicker.module.css\";\n\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  // console.log(fetchedCountries);\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">World Wide</option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport styles from \"./Tables.module.css\";\n\nclass Tables extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myResult: [],\n      summary: [],\n      hideData: false,\n      viewopen: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleViewOpen = () => {\n    this.setState({ viewopen: true });\n  };\n  handleHideData = () => {\n    this.setState({ myResult: [] });\n    this.setState({ hideData: true });\n  };\n  handleViewClose = () => {\n    this.setState({ viewopen: false });\n  };\n\n  getData = () => {\n    let data = fetch(`https://api.rootnet.in/covid19-in/stats/latest`);\n    data\n      .then((respone) => {\n        return respone.json();\n      })\n      .then((result) => {\n        console.log(result.data.regional);\n        this.setState({ myResult: result.data.regional });\n        this.setState({ summary: result.data.summary });\n      });\n  };\n\n  render() {\n    const headerTextColor = { color: \"white\", fontSize: 14 };\n    return (\n      <div className={styles.container}>\n        <div className={styles.buttonStyle}>\n          <Button\n            onClick={this.handleViewOpen}\n            style={{ backgroundColor: \"black\", color: \"white\", width: \"130px\" }}\n          >\n            India\n          </Button>\n        </div>\n\n        <Dialog style={{ minWidth: 800 }} open={this.state.viewopen}>\n          <DialogContent>\n            <TableContainer className={styles.tablecontainer}>\n              <Table className={styles.tablecontainer}>\n                <TableHead\n                  className={styles.tablecontainer}\n                  style={{ backgroundColor: \"grey\" }}\n                >\n                  <TableRow>\n                    <TableCell style={headerTextColor}>NAME</TableCell>\n                    <TableCell style={headerTextColor}>CONFIRMED</TableCell>\n                    <TableCell style={headerTextColor}>RECOVERED</TableCell>\n                    <TableCell style={headerTextColor}>DEATH</TableCell>\n                    <TableCell style={headerTextColor}>TOTAL</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.state.myResult.map((data) => (\n                    <TableRow>\n                      <TableCell\n                        style={{\n                          color: \"#00000\",\n                          fontWeight: \"bold\",\n                          fontSize: 16,\n                        }}\n                      >\n                        {data.loc}\n                      </TableCell>\n                      <TableCell style={{ color: \"#006699\", fontSize: 16 }}>\n                        {data.confirmedCasesIndian}{\" \"}\n                      </TableCell>\n                      <TableCell style={{ color: \"green\", fontSize: 16 }}>\n                        {data.discharged}\n                      </TableCell>\n                      <TableCell style={{ color: \"#ff1a1a\", fontSize: 16 }}>\n                        {data.deaths}\n                      </TableCell>\n                      <TableCell style={{ fontSize: 16 }}>\n                        {data.totalConfirmed}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n                <TableHead>\n                  <TableRow>\n                    <TableCell\n                      style={{\n                        color: \"#00000\",\n                        fontWeight: \"bold\",\n                        fontSize: 16,\n                      }}\n                    >\n                      Total\n                    </TableCell>\n                    <TableCell>\n                      {this.state.summary.confirmedCasesIndian}\n                    </TableCell>\n                    <TableCell>{this.state.summary.discharged}</TableCell>\n                    <TableCell>{this.state.summary.deaths}</TableCell>\n                    <TableCell>{this.state.summary.total}</TableCell>\n                  </TableRow>\n                </TableHead>\n              </Table>\n            </TableContainer>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleViewClose} color=\"primary\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\nexport default Tables;\n","import React from \"react\";\n\n// import { Button } from '@material-ui/core';\nimport { Cards, Chart, CountryPicker, Tables } from \"./components\";\n\nimport { fetchData } from \"./api\";\n\nimport styles from \"./App.module.css\";\n\nimport coronoImage from \"./images/image.png\";\nimport coronagif from \"./images/covid-19.gif\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n    table: [],\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n\n    this.setState({ data: fetchedData, country: country });\n  };\n  render() {\n    const { data, country, table } = this.state;\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronoImage} alt=\"COVID-19\" />\n        <img className={styles.gif} src={coronagif} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Tables />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tables_container__16sqK\",\"tablecontainer\":\"Tables_tablecontainer__3oS3P\",\"buttonStyle\":\"Tables_buttonStyle__T2mjy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"gif\":\"App_gif__uo8oC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__2ncTU\"};"],"sourceRoot":""}